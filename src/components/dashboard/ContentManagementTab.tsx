import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { toast } from "@/components/ui/use-toast";
import { InputFile } from "../ui/input-file";
import { Pencil, Save, Check, ExternalLink, RefreshCw } from "lucide-react";

const ContentManagementTab = () => {
  const [projectDescription, setProjectDescription] = useState(
    "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç '–ë—É–¥—É—â–µ–µ –†–æ—Å—Å–∏–∏' –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–µ—Ç–µ–π –¥–æ—à–∫–æ–ª—å–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –∏—Ö –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É —É—á–∞—Å—Ç–∏—é –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏. –ü—Ä–æ–µ–∫—Ç –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ—Ç—è–º —Å–æ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ–±—â–µ—Å—Ç–≤–µ –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ —É—á–∞—Å—Ç–∏—é –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ '–û—Ä–ª—è—Ç–∞ –†–æ—Å—Å–∏–∏' –æ—Ç –í–î–¶ '–û—Ä–ª—ë–Ω–æ–∫'."
  );
  
  const [projectGoals, setProjectGoals] = useState(
    "–ü–æ–º–æ—á—å –¥–µ—Ç—è–º —Å–æ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ–±—â–µ—Å—Ç–≤–µ, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É—á–∞—Å—Ç–∏—é –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ '–û—Ä–ª—è—Ç–∞ –†–æ—Å—Å–∏–∏', —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏, —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–∞—Ç—Ä–∏–æ—Ç–∏—á–µ—Å–∫–∏—Ö —á—É–≤—Å—Ç–≤."
  );
  
  const [projectAudience, setProjectAudience] = useState(
    "–î–µ—Ç–∏ –¥–æ—à–∫–æ–ª—å–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –æ—Ç 5 –¥–æ 7 –ª–µ—Ç."
  );

  const [isEditing, setIsEditing] = useState({
    tracks: false,
    marquee: false
  });

  const initialTracks = [
    { id: 1, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –≠—Ä—É–¥–∏—Ç", description: "–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π" },
    { id: 2, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –•—Ä–∞–Ω–∏—Ç–µ–ª—å", description: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Ä–µ–∂–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –ø—Ä–∏—Ä–æ–¥–µ –∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–º—É –Ω–∞—Å–ª–µ–¥–∏—é" },
    { id: 3, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –ú–∞—Å—Ç–µ—Ä", description: "–†–∞–∑–≤–∏—Ç–∏–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π" },
    { id: 4, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –°–ø–æ—Ä—Ç—Å–º–µ–Ω", description: "–§–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø—Ä–∏–æ–±—â–µ–Ω–∏–µ –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏" },
    { id: 5, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –î–æ–±—Ä–æ–≤–æ–ª–µ—Ü", description: "–†–∞–∑–≤–∏—Ç–∏–µ –¥–æ–±—Ä–æ–≤–æ–ª—å—á–µ—Å—Ç–≤–∞ –∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä—Å—Ç–≤–∞" },
    { id: 6, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –≠–∫–æ–ª–æ–≥", description: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã" },
    { id: 7, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –ü–∞—Ç—Ä–∏–æ—Ç", description: "–í–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –ª—é–±–≤–∏ –∫ –†–æ–¥–∏–Ω–µ, –∏–∑—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏" },
    { id: 8, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –õ–∏–¥–µ—Ä", description: "–†–∞–∑–≤–∏—Ç–∏–µ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –∫–∞—á–µ—Å—Ç–≤" },
    { id: 9, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –¢–µ—Ö–Ω–æ–ª–æ–≥", description: "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏" },
    { id: 10, name: "–û—Ä–ª—ë–Ω–æ–∫ ‚Äì –ö–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä", description: "–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤" }
  ];

  const [tracks, setTracks] = useState(initialTracks);
  const [editingTrackId, setEditingTrackId] = useState<number | null>(null);
  const [editingTrack, setEditingTrack] = useState({
    name: "",
    description: ""
  });

  const [marqueeMessages, setMarqueeMessages] = useState([
    { id: 1, text: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –î–Ω—ë–º –†–æ—Å—Å–∏–∏! üá∑üá∫", isActive: true },
    { id: 2, text: "–° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –°–≤–µ—Ç–ª–æ–π –ü–∞—Å—Ö–∏! ‚ò¶Ô∏è", isActive: true },
    { id: 3, text: "–° –î–Ω—ë–º –∑–∞—â–∏—Ç—ã –¥–µ—Ç–µ–π! üëßüë¶", isActive: true }
  ]);
  
  const [newMessage, setNewMessage] = useState("");
  const [selectedImage, setSelectedImage] = useState<File | null>(null);
  const [selectedSection, setSelectedSection] = useState("");

  const handleSaveContent = () => {
    toast({
      title: "–ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω",
      description: "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
    });
  };

  const handleEditTrack = (track: typeof tracks[0]) => {
    setEditingTrackId(track.id);
    setEditingTrack({
      name: track.name,
      description: track.description
    });
  };

  const handleSaveTrack = (id: number) => {
    setTracks(tracks.map(track => 
      track.id === id 
        ? { ...track, name: editingTrack.name, description: editingTrack.description } 
        : track
    ));
    setEditingTrackId(null);
    
    toast({
      title: "–¢—Ä–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω",
      description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
    });
  };

  const handleAddMessage = () => {
    if (!newMessage.trim()) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
        variant: "destructive"
      });
      return;
    }
    
    const newId = Math.max(0, ...marqueeMessages.map(m => m.id)) + 1;
    setMarqueeMessages([
      ...marqueeMessages,
      { id: newId, text: newMessage, isActive: true }
    ]);
    setNewMessage("");
    
    toast({
      title: "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ",
      description: "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–µ–≥—É—â—É—é —Å—Ç—Ä–æ–∫—É"
    });
  };

  const toggleMessageActive = (id: number) => {
    setMarqueeMessages(marqueeMessages.map(msg => 
      msg.id === id ? { ...msg, isActive: !msg.isActive } : msg
    ));
    
    const message = marqueeMessages.find(msg => msg.id === id);
    toast({
      title: message?.isActive ? "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ" : "–°–æ–æ–±—â–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ",
      description: "–°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–µ –∏–∑–º–µ–Ω–µ–Ω"
    });
  };

  const deleteMessage = (id: number) => {
    setMarqueeMessages(marqueeMessages.filter(msg => msg.id !== id));
    
    toast({
      title: "–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
      description: "–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏"
    });
  };

  const handleFileSelect = (files: FileList | null) => {
    if (files && files.length > 0) {
      setSelectedImage(files[0]);
    }
  };

  const handleSectionChange = (value: string) => {
    setSelectedSection(value);
  };

  const handleUpdateImage = () => {
    if (!selectedImage) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        variant: "destructive"
      });
      return;
    }
    
    if (!selectedSection) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª",
        variant: "destructive"
      });
      return;
    }
    
    toast({
      title: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ",
      description: `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "${selectedSection}" —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`
    });
    
    setSelectedImage(null);
    setSelectedSection("");
  };

  const resetToDefaults = () => {
    setTracks(initialTracks);
    toast({
      title: "–°–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω",
      description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–∞—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –¥–æ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    });
  };

  return (
    <div className="space-y-6">
      <h2 className="text-xl font-bold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å–∞–π—Ç–∞</h2>
      
      <Tabs defaultValue="main" className="space-y-4">
        <TabsList>
          <TabsTrigger value="main">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</TabsTrigger>
          <TabsTrigger value="tracks">–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–∫–∏</TabsTrigger>
          <TabsTrigger value="marquee">–ë–µ–≥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞</TabsTrigger>
          <TabsTrigger value="images">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</TabsTrigger>
        </TabsList>
        
        <TabsContent value="main">
          <Card className="p-6">
            <h3 className="font-medium mb-4">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ</h3>
            <div className="space-y-4">
              <div>
                <Label htmlFor="projectDescription">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</Label>
                <Textarea 
                  id="projectDescription"
                  rows={5}
                  value={projectDescription}
                  onChange={(e) => setProjectDescription(e.target.value)}
                />
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="projectGoals">–¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞</Label>
                  <Textarea 
                    id="projectGoals"
                    rows={3}
                    value={projectGoals}
                    onChange={(e) => setProjectGoals(e.target.value)}
                  />
                </div>
                
                <div>
                  <Label htmlFor="projectAudience">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è</Label>
                  <Textarea 
                    id="projectAudience"
                    rows={3}
                    value={projectAudience}
                    onChange={(e) => setProjectAudience(e.target.value)}
                  />
                </div>
              </div>
              
              <Button onClick={handleSaveContent} className="w-full md:w-auto">
                <Save className="mr-2 h-4 w-4" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </Button>
            </div>
          </Card>
        </TabsContent>
        
        <TabsContent value="tracks">
          <Card className="p-6">
            <div className="flex justify-between items-center mb-4">
              <h3 className="font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Ç—Ä–µ–∫–∞–º–∏</h3>
              <Button 
                variant="outline" 
                size="sm"
                onClick={resetToDefaults}
              >
                <RefreshCw className="mr-2 h-4 w-4" />
                –°–±—Ä–æ—Å–∏—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω—ã–º
              </Button>
            </div>
            
            <div className="space-y-4">
              <div className="grid grid-cols-1 gap-3">
                {tracks.map((track) => (
                  <div 
                    key={track.id} 
                    className="border rounded-md p-4 hover:bg-gray-50 transition-colors"
                  >
                    {editingTrackId === track.id ? (
                      <div className="space-y-2">
                        <div>
                          <Label htmlFor={`track-${track.id}-name`}>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞</Label>
                          <Input 
                            id={`track-${track.id}-name`}
                            value={editingTrack.name}
                            onChange={(e) => setEditingTrack({ ...editingTrack, name: e.target.value })}
                          />
                        </div>
                        <div>
                          <Label htmlFor={`track-${track.id}-desc`}>–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞</Label>
                          <Input 
                            id={`track-${track.id}-desc`}
                            value={editingTrack.description}
                            onChange={(e) => setEditingTrack({ ...editingTrack, description: e.target.value })}
                          />
                        </div>
                        <div className="flex gap-2 justify-end">
                          <Button 
                            size="sm" 
                            variant="outline" 
                            onClick={() => setEditingTrackId(null)}
                          >
                            –û—Ç–º–µ–Ω–∞
                          </Button>
                          <Button 
                            size="sm"
                            onClick={() => handleSaveTrack(track.id)}
                          >
                            <Check className="mr-1 h-4 w-4" />
                            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                          </Button>
                        </div>
                      </div>
                    ) : (
                      <div className="flex justify-between items-start">
                        <div>
                          <h4 className="font-medium">{track.name}</h4>
                          <p className="text-sm text-gray-600">
                            {track.description}
                          </p>
                        </div>
                        <Button 
                          size="sm" 
                          variant="ghost" 
                          onClick={() => handleEditTrack(track)}
                        >
                          <Pencil className="h-4 w-4" />
                        </Button>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          </Card>
        </TabsContent>
        
        <TabsContent value="marquee">
          <Card className="p-6">
            <h3 className="font-medium mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–æ–π</h3>
            
            <div className="space-y-6">
              <div className="space-y-4">
                <Label>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</Label>
                <div className="flex gap-2">
                  <Input
                    value={newMessage}
                    onChange={(e) => setNewMessage(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
                    className="flex-grow"
                  />
                  <Button onClick={handleAddMessage}>–î–æ–±–∞–≤–∏—Ç—å</Button>
                </div>
                <p className="text-sm text-gray-600">
                  –°–æ–≤–µ—Ç: –¥–æ–±–∞–≤—å—Ç–µ —ç–º–æ–¥–∑–∏ —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: üá∑üá∫ ‚ò¶Ô∏è üéÑ üéì
                </p>
              </div>
              
              <div>
                <h4 className="font-medium mb-3">–¢–µ–∫—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è</h4>
                <div className="space-y-2">
                  {marqueeMessages.map((message) => (
                    <div key={message.id} className="flex justify-between items-center border p-3 rounded-md">
                      <div className="flex items-center gap-3">
                        <div className={`w-2 h-2 rounded-full ${message.isActive ? 'bg-green-500' : 'bg-gray-300'}`}></div>
                        <span>{message.text}</span>
                      </div>
                      <div className="flex gap-2">
                        <Button 
                          size="sm" 
                          variant="outline"
                          onClick={() => toggleMessageActive(message.id)}
                        >
                          {message.isActive ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
                        </Button>
                        <Button 
                          size="sm" 
                          variant="destructive"
                          onClick={() => deleteMessage(message.id)}
                        >
                          –£–¥–∞–ª–∏—Ç—å
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              
              <div className="p-4 bg-blue-50 rounded-md">
                <p className="text-sm">
                  <strong>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong> –ë–µ–≥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Å–∞–π—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞, –ø–æ–∫–∞–∑—ã–≤–∞—è —Ä–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö.
                </p>
              </div>
            </div>
          </Card>
        </TabsContent>
        
        <TabsContent value="images">
          <Card className="p-6">
            <h3 className="font-medium mb-4">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–∞–π—Ç–µ</h3>
            
            <div className="space-y-4">
              <div>
                <Label htmlFor="image-section">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</Label>
                <Select value={selectedSection} onValueChange={handleSectionChange}>
                  <SelectTrigger id="image-section">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="header">–®–∞–ø–∫–∞ —Å–∞–π—Ç–∞ (–±–∞–Ω–Ω–µ—Ä)</SelectItem>
                    <SelectItem value="about">–ë–ª–æ–∫ "–û –ø—Ä–æ–µ–∫—Ç–µ"</SelectItem>
                    <SelectItem value="curator">–§–æ—Ç–æ –∫—É—Ä–∞—Ç–æ—Ä–∞</SelectItem>
                    <SelectItem value="tracks">–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–∫–∏ (–æ–±—â–µ–µ)</SelectItem>
                    <SelectItem value="footer">–ü–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              
              <div>
                <Label htmlFor="section-image">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</Label>
                <InputFile 
                  id="section-image"
                  accept=".jpg,.jpeg,.png,.webp"
                  buttonText="–í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                  onFileSelect={handleFileSelect}
                />
                <p className="text-xs text-gray-500 mt-2">
                  –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 1200√ó600 –ø–∏–∫—Å–µ–ª–µ–π, —Ñ–æ—Ä–º–∞—Ç: JPG –∏–ª–∏ PNG
                </p>
              </div>
              
              <div className="flex justify-between items-center pt-2">
                <Button onClick={handleUpdateImage}>
                  –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                </Button>
                
                <a 
                  href="#" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-sm text-primary inline-flex items-center"
                >
                  –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                  <ExternalLink className="ml-1 h-3 w-3" />
                </a>
              </div>
            </div>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default ContentManagementTab;
